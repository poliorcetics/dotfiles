# Git configuration
#
# <https://git-scm.com/>

{ config, ... }:
{
  programs.git.enable = true;

  programs.git.userName = "Alexis (Poliorcetics) Bourget";
  programs.git.userEmail = "ab_github_default@poliorcetiq.eu";

  programs.git.aliases = {
    a = "add";

    b = "branch";

    c = "commit";
    ca = "commit --amend";
    cm = "commit -m";

    cp = "cherry-pick";

    d = "diff";
    ds = "diff --staged";
    dd = "difftool";
    ddl = "!f() { GIT_EXTERNAL_DIFF=difft git log -p --ext-diff $@; }; f";
    dds = "difftool --staged";

    lb = "log --pretty=format:'%Cred%h %Cblue%an %Cgreen%ai%C(yellow)%d%n%B' origin..HEAD";
    # Pretty log graph for a project
    lg = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --all";
    lgb = ''!f(){ local currentbranch=$(git rev-parse --abbrev-ref HEAD); git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative \"$\{1:-$currentbranch\}\"; };f'';

    m = "merge";
    ma = "merge --abort";
    mc = "merge --continue";

    p = "pull";
    pf = "push --force-with-lease";
    ps = "push";

    r = "rebase";
    ra = "rebase --abort";
    rc = "rebase --continue";
    ri = "rebase -i";

    s = "status";

    ssd = "!git stash && git stash drop";
    st = "stash";

    sw = "switch";

    unstage = "reset HEAD --";
  };

  # The default `diff` pager to use
  programs.git.delta = {
    enable = true;

    options = {
      decorations = {
        commit-decoration-style = "bold yellow box ul";
        file-decoration-style = "none";
        file-style = "bold yellow ul";
        hunk-header-decoration-style = "cyan box ul";
      };

      line-numbers = {
        line-numbers-left-style = "cyan";
        line-numbers-minus-style = "bold 124";
        line-numbers-plus-style = "bold 28";
        line-numbers-right-style = "cyan";
      };

      features = "line-numbers decorations";
      # line-numbers = true;
      minus-style = ''syntax "#3f0001"'';
      plus-emph-style = ''syntax "#005600"'';
      plus-style = ''syntax "#002300"'';
      side-by-side = true;
      syntax-theme = "Dracula";
    };
  };

  # Settings: <https://git-scm.com/docs/git-config#_variables>
  programs.git.extraConfig = {
    core = {
      editor = "hx";
      fsmonitor = false;
    };

    # <https://difftastic.wilfred.me.uk/git.html>
    diff.tool = "difftastic";
    difftool.prompt = false;
    "difftool \"difftastic\"".cmd = ''difft --display side-by-side-show-both --tab-width 4 "$BASE" "$LOCAL" "hash" "mode" "$REMOTE" "hash" "mode"'';

    "color \"branch\"" = {
      current = "green";
      local = "yellow";
      remote = "red";
    };

    "color \"diff\"" = {
      frag = "magenta";
      meta = "yellow";
      new = "green";
      old = "red";
    };

    "color \"status\"" = {
      added = "green";
      changed = "yellow";
      untracked = "red";
    };

    "filter \"media\"" = {
      clean = "git-media-clean %f";
      smudge = "git-media-smudge %f";
    };

    "filter \"hawser\"" = {
      clean = "git hawser clean %f";
      required = true;
      smudge = "git hawser smudge %f";
    };

    "filter \"lfs\"" = {
      clean = "git-lfs clean -- %f";
      process = "git-lfs filter-process";
      required = true;
      smudge = "git-lfs smudge -- %f";
    };

    diff.algorithm = "histogram";
    fetch.prune = true;
    init.defaultBranch = "main";
    merge.conflictstyle = "zdiff3";
    pager.difftool = true;
    pull.rebase = true;
    push.followtags = true;
    rebase.autosquash = true;
    rebase.updateRefs = true;
    rerere.enabled = true;
    status.showUntrackedFiles = "all";
    ui.color = "auto";

    # Commit signing
    commit.gpgsign = true;
    gpg.format = "ssh";
    user.signingkey = "${config.home.homeDirectory}/.ssh/id_signing.pub";
  };

  # Inspired by the file generated by the Github for Desktop app
  programs.git.ignores = [
    # General
    ".DS_Store"
    ".AppleDouble"
    ".LSOverride"

    # Icon must end with two \r
    "Icon"

    # Thumbnails
    "._*"

    # Files that might appear in the root of a volume
    ".DocumentRevisions-V100"
    ".fseventsd"
    ".Spotlight-V100"
    ".TemporaryItems"
    ".Trashes"
    ".VolumeIcon.icns"
    ".com.apple.timemachine.donotpresent  "

    # Directories potentially created on remote AFP share
    ".AppleDB"
    ".AppleDesktop"
    "Network Trash Folder"
    "Temporary Items"
    ".apdisk"

    # JetBrains dirs
    ".idea"

    # VS Code generated dirs and files
    ".vscode"
    "*.code-workspace"

    # XCode dirs
    "*.xcworkspace"
    "*.xcodeproj"

    # Use a specific repo for RA to not interfere with CLI commands
    "target-rust-analyzer"

    # YCM (vim plugin) files
    ".ycm_extra_conf.py"

    # Helix local config files
    ".helix"

    # Bacon: project config file
    "bacon.toml"

    # cacbe for some LSP and builds
    ".cache"
    "compile_commands.json"

    # Jujutsu
    ".jj"
  ];

  # Allow an override of the user-wide config for each machines. Can notably be used to change the
  # default user and email or add secret handling.
  programs.git.includes = [ { path = "${config.xdg.configHome}/git/config_local"; } ];

  programs.git.lfs.enable = true;
}
